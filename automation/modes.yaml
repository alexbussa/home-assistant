##############################################################
# Timed Modes
##############################################################

# Morning Mode ################################################
- alias: Start Morning Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_nightend", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_morning
- alias: End Morning Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_sunriseend", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_morning

# Day Mode ################################################
- alias: Start Day Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_sunriseend", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_day
- alias: End Day Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_goldenhour", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_day

# Sunset Mode ################################################
- alias: Start Sunset Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_goldenhour", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_sunset
- alias: End Sunset Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_sunsetstart", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_sunset

# Night Mode #################################################
- alias: Start Night Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_sunsetstart", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_night
- alias: End Night Mode
  trigger:
    platform: template
    value_template: '{{ is_state("sensor.suncalc_nightend", as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) | timestamp_custom("%H:%M")) }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_night

##############################################################
# Event Modes
##############################################################

# Guest Mode #################################################
- alias: Start Guest Mode
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.garage_door
        - binary_sensor.front_door
      to: 'on'
    - platform: event
      event_type: event_trigger_mode_guest
  condition:
    condition: state
    entity_id: group.residents
    state: 'not_home'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_guest
- alias: End Guest Mode
  trigger:
    - platform: state
      entity_id: group.residents
      to: 'home'
    - platform: state
      entity_id: group.motion_guest_areas
      to: 'off'
      for:
        minutes: 30
  condition:
    condition: state
    entity_id: input_boolean.mode_home_theater
    state: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_guest

# Simulate Presence Mode #####################################
# Turns on between 5:00pm and 3:00am, Night Mode determines actual start time
# Used for triggering scenes when no one is home, to simulate presence
# Mode turns on a random time after no one is home
# Mode stays on for a random length of time
# Mode will turn on again after a random delay
- alias: Simulate Presence Mode
  trigger:
    - platform: state
      entity_id: group.residents
      to: 'not_home'
      for:
        minutes: 10
    - platform: state
      entity_id: input_boolean.mode_guest
      to: 'off'
      for:
        minutes: 10
    - platform: state
      entity_id: input_boolean.mode_night
      to: 'on'
    - platform: event
      event_type: event_simulate_presence
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_night
        state: 'on'
      - condition: state
        entity_id: group.residents
        state: 'not_home'
      - condition: state
        entity_id: input_boolean.mode_guest
        state: 'off'
      - condition: or
        conditions:
          - condition: time
            after: '17:00:00'
          - condition: time
            before: '03:00:00'
  action:
    - service: homeassistant.turn_on
      entity_id: input_boolean.mode_simulate_presence
    - delay: '00:{{ (range(2, 10) | random) }}:00'
    - service: homeassistant.turn_off
      entity_id: input_boolean.mode_simulate_presence
    - delay: '00:{{ (range(35, 55) | random) }}:00'
    - event: event_simulate_presence

# Sleep Mode #################################################
# Starts when bedroom beacon is detected during bedtime.
# Lognger delay before exiting mode, beacon detection is spotty.
- alias: Start Sleep Mode
  trigger:
    platform: state
    entity_id: sensor.bedroom_presence
    to: 'occupied'
    for:
      seconds: 30
  condition:
    condition: or
    conditions:
      - condition: time
        after: '21:00:00'
      - condition: template
        value_template: >
          {% set weekday = as_timestamp(states.sensor.date.state + " 05:00") %}
          {% set weekend = as_timestamp(states.sensor.date.state + " " + states.sensor.suncalc_goldenhourend.state) %}
          {% set time    = as_timestamp(states.sensor.date.state + " " + states.sensor.time.state) %}
          {% set today   = (now().strftime("%A") | lower) %}
          {% if today in ["monday", "tuesday", "wednesday", "thursday", "friday"] and time < weekday %}
            true
          {% elif today in ["saturday", "sunday"] and time < weekend %}
            true
          {% else %}
            false
          {% endif %}
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_sleep
- alias: End Sleep Mode
  trigger:
    - platform: state
      entity_id: sensor.bedroom_presence
      to: 'unoccupied'
      for:
        minutes: 5
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_sleep


# Home Theater Mode ##########################################
- alias: Start Home Theater Mode
  trigger:
    - platform: state
      entity_id: media_player.denon_avr_x4300h
      from: 'off'
      to: 'on'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_home_theater
- alias: End Home Theater Mode
  trigger:
    - platform: state
      entity_id: media_player.denon_avr_x4300h
      from: 'on'
      to: 'off'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_home_theater


##############################################################
# Notify Modes
##############################################################

# Overwatch CPU Temp #########################################
- alias: Mode Start Notify Overwatch CPU Temp
  trigger:
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_temp
      above: 68
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.notify_overwatch_cpu_temp
- alias: Mode End Notify Overwatch CPU Temp
  trigger:
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_temp
      below: 69
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.notify_overwatch_cpu_temp

# Woodhouse CPU Temp #########################################
- alias: Mode Start Notify Woodhouse CPU Temp
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.woodhouse_cpu1_temp
        - sensor.woodhouse_cpu2_temp
      above: 68
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.notify_woodhouse_cpu_temp
- alias: Mode End Notify Woodhouse CPU Temp
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.woodhouse_cpu1_temp
        - sensor.woodhouse_cpu2_temp
      below: 69
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.woodhouse_cpu1_temp
        below: 69
      - condition: numeric_state
        entity_id: sensor.woodhouse_cpu2_temp
        below: 69
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.notify_woodhouse_cpu_temp
