##############################################################
# HA Start Configuration
##############################################################

# Manually Set Morning Mode State #############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Morning Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_morning
        state: 'off'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") >= states.sensor.suncalc_nightend.state | timestamp_custom("%H:%M") }}'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") <= states.sensor.suncalc_sunriseend.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_morning
- alias: Manually Reset End Morning Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_morning
        state: 'on'
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") < states.sensor.suncalc_nightend.state | timestamp_custom("%H:%M") }}'
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") > states.sensor.suncalc_sunriseend.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_morning

# Manually Set Day Mode State #############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Day Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_day
        state: 'off'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") >= states.sensor.suncalc_sunriseend.state | timestamp_custom("%H:%M") }}'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") <= states.sensor.suncalc_goldenhour.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_day
- alias: Manually Reset End Day Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_day
        state: 'on'
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") < states.sensor.suncalc_sunriseend.state | timestamp_custom("%H:%M") }}'
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") > states.sensor.suncalc_goldenhour.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_day

# Manually Set Sunset Mode State #############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Sunset Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_sunset
        state: 'off'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") >= states.sensor.suncalc_goldenhour.state | timestamp_custom("%H:%M") }}'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") <= states.sensor.suncalc_sunsetstart.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_sunset
- alias: Manually Reset End Sunset Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_sunset
        state: 'on'
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") < states.sensor.suncalc_goldenhour.state | timestamp_custom("%H:%M") }}'
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") > states.sensor.suncalc_sunsetstart.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_sunset

# Manually Set Night Mode State ##############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Night Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_night
        state: 'off'
      - condition: or
        conditions:
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") >= states.sensor.suncalc_sunsetstart.state | timestamp_custom("%H:%M") }}'
          - condition: template
            value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") <= states.sensor.suncalc_nightend.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_on
    entity_id: input_boolean.mode_night
- alias: Manually Reset End Night Mode
  trigger:
    platform: homeassistant
    event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_night
        state: 'on'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") < states.sensor.suncalc_sunsetstart.state | timestamp_custom("%H:%M") }}'
      - condition: template
        value_template: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") > states.sensor.suncalc_nightend.state | timestamp_custom("%H:%M") }}'
  action:
    service: homeassistant.turn_off
    entity_id: input_boolean.mode_night

# Manually Start HomeKit #####################################
# Wait until the zwave network is ready
- alias: Manually Start HomeKit
  trigger:
    - platform: event
      event_type: zwave.network_ready
    - platform: event
      event_type: zwave.network_complete
    - platform: event
      event_type: zwave.network_complete_some_dead
  action:
    - service: homekit.start
    - event: event_zwave_network_ready
