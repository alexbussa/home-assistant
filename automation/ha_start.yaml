##############################################################
# HA Start Configuration
##############################################################

# Manually Set Morning Mode State #############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Morning Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    - condition: state
      entity_id: input_boolean.mode_morning
      state: 'off'
    - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) >= states.sensor.suncalc_nightend.state }}'
    - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) <= states.sensor.suncalc_sunriseend.state }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.mode_morning
- alias: Manually Reset End Morning Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_morning
        state: 'on'
      - condition: or
        conditions:
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) < states.sensor.suncalc_nightend.state }}'
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) > states.sensor.suncalc_sunriseend.state }}'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.mode_morning

# Manually Set Day Mode State #############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Day Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    - condition: state
      entity_id: input_boolean.mode_day
      state: 'off'
    - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) >= states.sensor.suncalc_sunriseend.state }}'
    - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) <= states.sensor.suncalc_goldenhour.state }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.mode_day
- alias: Manually Reset End Day Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_day
        state: 'on'
      - condition: or
        conditions:
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) < states.sensor.suncalc_sunriseend.state }}'
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) > states.sensor.suncalc_goldenhour.state }}'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.mode_day

# Manually Set Sunset Mode State #############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Sunset Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    - condition: state
      entity_id: input_boolean.mode_sunset
      state: 'off'
    - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) >= states.sensor.suncalc_goldenhour.state }}'
    - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) <= states.sensor.suncalc_sunsetstart.state }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.mode_sunset
- alias: Manually Reset End Sunset Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_sunset
        state: 'on'
      - condition: or
        conditions:
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) < states.sensor.suncalc_goldenhour.state }}'
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) > states.sensor.suncalc_sunsetstart.state }}'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.mode_sunset

# Manually Set Night Mode State ##############################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Start Night Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_night
        state: 'off'
      - condition: or
        conditions:
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) >= states.sensor.suncalc_sunsetstart.state }}'
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) <= states.sensor.suncalc_nightend.state }}'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.mode_night
- alias: Manually Reset End Night Mode
  trigger:
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.mode_night
        state: 'on'
      - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) < states.sensor.suncalc_sunsetstart.state }}'
      - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) > states.sensor.suncalc_nightend.state }}'
  action:
    - service: input_boolean.turn_off
      entity_id: input_boolean.mode_night

# Manually Set Energy Tariff #################################
# State is only changed if it is incorrect. Don't want to trigger mode changes on restart unnecessarily.
- alias: Manually Reset Energy Off-Peak Tariff
  trigger:
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: utility_meter.grid_consumption_hourly
        state: 'peak'
      - condition: or
        conditions:
          - condition: state
            entity_id: binary_sensor.srp_on_peak_day
            state: 'off'
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) < "16:00" }}'
          - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) >= "19:00" }}'
  action:
    - service: select.select_option
      target:
        entity_id:
          - select.grid_consumption_daily
          - select.grid_consumption_hourly
          - select.grid_consumption_monthly
      data:
        option: offpeak
- alias: Manually Reset Energy Peak Tariff
  trigger:
    - platform: homeassistant
      event: start
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: utility_meter.grid_consumption_hourly
        state: 'offpeak'
      - condition: state
        entity_id: binary_sensor.srp_on_peak_day
        state: 'on'
      - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) >= "16:00" }}'
      - '{{ as_timestamp(now()) | timestamp_custom("%H:%M", default = 0) < "19:00" }}'
  action:
    - service: select.select_option
      target:
        entity_id:
         - select.grid_consumption_daily
         - select.grid_consumption_hourly
         - select.grid_consumption_monthly
      data:
        option: peak

# Manually Start HomeKit #####################################
# Wait until the zwave network is ready
# - alias: Manually Start HomeKit
#   trigger:
#     - platform: event
#       event_type: zwave.network_ready
#     - platform: event
#       event_type: zwave.network_complete
#     - platform: event
#      event_type: zwave.network_complete_some_dead
#   action:
#     - service: homekit.start
#     - event: event_zwave_network_ready

# Manually Set Theme #########################################
- alias: Manually Set Lovelace Theme
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: frontend.set_theme
      data:
        name: Custom Dark
