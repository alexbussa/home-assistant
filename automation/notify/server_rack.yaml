##############################################################
# Server Events
##############################################################

# Overwatch Excessive CPU Load ###############################
- alias: Notify Overwatch - Excessive CPU Loads
  trigger:
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_load
      above: 2
      for:
        minutes: 10
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_load
      above: 2
      for:
        minutes: 20
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_load
      above: 2
      for:
        minutes: 30
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_load
      above: 2
      for:
        minutes: 60
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: "Overwatch"
        message: "Excessive CPU Load for {{ (trigger.for.total_seconds() / 60) | int }} minutes."
        data:
          push:
            thread-id: "ha-server-group"
            sound: "siren.wav"

# Overwatch Excessive CPU Temp ###############################
- alias: Notify Overwatch - Excessive CPU Temp
  trigger:
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_temp
      above: 68
      for:
        minutes: 10
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_temp
      above: 68
      for:
        minutes: 20
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_temp
      above: 68
      for:
        minutes: 30
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_temp
      above: 68
      for:
        minutes: 60
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: "Overwatch"
        message: >-
          {%- set level = 'Critical' if states("sensor.overwatch_cpu_temp") | int > 79 else 'Warning' -%}
          {{- level | title }}. The server has been running hot for {{ (trigger.for.total_seconds() / 60) | int }} minutes.
        data:
          push:
            thread-id: "ha-server-group"
            sound:
              name: "siren.wav"
              critical: 1
              volume: 1.0

- alias: Notify Overwatch - Normal CPU Temp
  trigger:
    - platform: numeric_state
      entity_id: sensor.overwatch_cpu_temp
      below: 68
      for:
        minutes: 5
  # Prevent trigger when loading automations
  condition:
    - '{{ trigger.from_state is not none }}'
    - '{{ trigger.from_state.state is number }}'
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: "Overwatch"
        message: >-
          The server has been restored to a normal operating temperature."
        data:
          push:
            thread-id: "ha-server-group"
            sound: "gesture.wav"

# Woodhouse Excessive CPU Temp ###############################
- alias: Notify Woodhouse - Excessive CPU Temp
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.woodhouse_cpu1_temp
        - sensor.woodhouse_cpu2_temp
      above: 68
      for:
        minutes: 10
    - platform: numeric_state
      entity_id:
        - sensor.woodhouse_cpu1_temp
        - sensor.woodhouse_cpu2_temp
      above: 68
      for:
        minutes: 20
    - platform: numeric_state
      entity_id:
        - sensor.woodhouse_cpu1_temp
        - sensor.woodhouse_cpu2_temp
      above: 68
      for:
        minutes: 30
    - platform: numeric_state
      entity_id:
        - sensor.woodhouse_cpu1_temp
        - sensor.woodhouse_cpu2_temp
      above: 68
      for:
        minutes: 60
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: "Woodhouse"
        message: >-
          {%- set level = 'critical' if states("sensor.woodhouse_cpu1_temp") | int > 79 or states("sensor.woodhouse_cpu2_temp") | int > 79 else 'warning' -%}
          {{- level | title }}. The server has been running hot for {{ (trigger.for.total_seconds() / 60) | int }} minutes.
        data:
          push:
            thread-id: "ha-server-group"
            sound:
              name: "siren.wav"
              critical: 1
              volume: 1.0

- alias: Notify Woodhouse - Normal CPU Temp
  trigger:
    - platform: numeric_state
      entity_id:
        - sensor.woodhouse_cpu1_temp
        - sensor.woodhouse_cpu2_temp
      below: 69
      for:
        minutes: 5
  # Prevent trigger when loading automations
  condition:
    - '{{ trigger.from_state is not none }}'
    - '{{ trigger.from_state.state is number }}'
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: "Woodhouse"
        message: >-
          The server has been restored to a normal operating temperature."
        data:
          push:
            thread-id: "ha-server-group"
            sound: "gesture.wav"


##############################################################
# Battery Events
##############################################################

# Server Rack UPS ############################################
- alias: Notify Server Rack - UPS on Battery
  trigger:
    - platform: state
      entity_id: sensor.server_rack_ups_status_data
      to: 'OB DISCHRG'
    - platform: state
      entity_id: sensor.server_rack_ups_status_data
      to: 'OB DISCHRG'
      for:
        minutes: 5
    - platform: state
      entity_id: sensor.server_rack_ups_status_data
      to: 'OB DISCHRG'
      for:
        minutes: 10
    - platform: state
      entity_id: sensor.server_rack_ups_status_data
      to: 'OB DISCHRG'
      for:
        minutes: 15
    - platform: state
      entity_id: sensor.server_rack_ups_status_data
      to: 'OB DISCHRG'
      for:
        minutes: 20
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: "Server Rack"
        message: >-
          {%- if ((as_timestamp(now()) - as_timestamp(states.sensor.server_rack_ups_status_data.last_changed)) / 60) | int < 5 -%}
            The UPS is running on battery power.
          {%- else -%}
            The UPS has been running on battery power for {{ (trigger.for.total_seconds() / 60) | int }} minutes. {{ states.sensor.server_rack_ups_battery_charge.state }}% remaining.
          {%- endif %}
        data:
          push:
            thread-id: "ha-server-group"
            sound:
              name: "siren.wav"
              critical: 1
              volume: 1.0

- alias: Notify Server Rack - UPS Online
  trigger:
    - platform: state
      entity_id: sensor.server_rack_ups_status_data
      to: 'OL CHRG'
      from: 'OB DISCHRG'
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: "Server Rack"
        message: >-
          {% if is_state('sensor.server_rack_ups_status_data', 'OL') %}
            The UPS is online and fully charged.
          {% elif is_state('sensor.server_rack_ups_status_data', 'OL CHRG') %}
            The UPS is back online and charging.
          {% endif %}
        data:
          push:
            thread-id: "ha-server-group"
            sound: "gesture.wav"


##############################################################
# Z-Wave Events
##############################################################

# Startup ####################################################
- alias: Notify Server Rack - Z-Wave Network Ready
  trigger:
    - platform: event
      event_type: event_zwave_network_ready
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: 'Home Assistant'
        message: 'Z-Wave network ready. Starting HomeKit.'
        data:
          push:
            thread-id: 'ha-server-group'
            sound: 'gesture.wav'


##############################################################
# Service Restart Events
##############################################################

# Sonarr #####################################################
- alias: Notify Service Restart - Sonarr
  trigger:
    - platform: event
      event_type: event_service_restart_sonarr
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: 'Sonarr'
        message: 'The container has been down for 10 minutes and is being restarted.'
        data:
          push:
            thread-id: 'ha-server-group'
            sound: 'gesture.wav'

# Plex #######################################################
- alias: Notify Service Update - Plex
  trigger:
    - platform: event
      event_type: event_service_upgrading_plex
  action:
    - service: notify.mobile_app_alexs_iphone
      data:
        title: 'Plex'
        message: 'Update available. The container is restarting to update to version {{ states("sensor.tautulli_plex_update_version") }}'
        data:
          push:
            thread-id: 'ha-server-group'
            sound: 'gesture.wav'


##############################################################
# Cox Events
##############################################################
# - alias: Notify Cox - Data Usage
#   trigger:
#     - platform: state
#       entity_id: sensor.cox_data_usage
#   condition:
#     condition: and
#     conditions:
#       - '{{ not is_state("sensor.cox_data_usage", "unavailable") }}'
#       - '{{ not is_state("sensor.cox_data_usage", "undefined") }}'
#       - '{{ states("sensor.cox_data_usage")[:-2] | int > 75 }}'
#   action:
#     - delay: '00:00:05'
#     - service: notify.mobile_app_alexs_iphone
#       data:
#         title: 'Cox'
#         message: >-
#             Data usage is at {{ states('sensor.cox_data_usage') }}%, resetting in {{ states('sensor.cox_data_resets') }} days.
#         data:
#           push:
#             thread-id: 'ha-server-group'
#             sound: 'gesture.wav'
