loader:
  custom_fields:
    loader: >
      <img src="/local/loader.svg" width="100%">
  tap_action:
    loader: >
      [[[
        if (entity !== undefined) {
          let elt = this.shadowRoot;
          const loader = (id, style, timeout) => {
            if (elt.getElementById(id)) {
              elt.getElementById(id).style.display = style;
              window.setTimeout(() => {
                elt.getElementById(id).style.display = timeout;
              }, 20000)
            }
          };
          loader('circle', 'none', 'initial');
          loader('loader', 'initial', 'none');
        }
      ]]]
  styles:
    custom_fields:
      loader:
        - display: none
        - top: 3%
        - left: 60%
        - width: 37%
        - position: absolute
        - opacity: 0.5
        - filter: >
            [[[ return variables.state === 'off' ? 'invert(1)' : 'none'; ]]]
climate:
  custom_fields:
    circle: >
      [[[
        const input = variables.circle_input == null ? ' ' : `${parseInt(variables.circle_input)}<tspan font-size="10">Â°C</tspan>`;
        const stroke_color = variables.state === 'cool' || variables.state === 'fan_only' ? '#b2b2b2' : 'none';
        const fill_color = variables.state === 'off' ? 'rgba(255,255,255,0.04)' : 'none';
        return `
          <svg viewBox="0 0 50 50">
            <circle cx="25" cy="25" r="20.5" stroke="${stroke_color}" stroke-width="1.5" fill="${fill_color}" />
            <text x="50%" y="54%" fill="#8d8e90" font-size="14" text-anchor="middle" alignment-baseline="middle" dominant-baseline="middle">${input}</text>
          </svg>
        `;
      ]]]
  styles:
    custom_fields:
      circle:
        - display: initial
        - width: 90%
        - letter-spacing: 0.03vw
        - margin: -6% -6% 0 0
        - justify-self: end
        - opacity: 1
