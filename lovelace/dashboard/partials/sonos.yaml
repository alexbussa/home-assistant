type: custom:mod-card
card_mod:
  style: |
    :host {
      --masonry-view-card-margin: 0;
      --ha-card-border-width: 0;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 301px;
    }
view_layout:
  grid-area: content
card:
  type: vertical-stack
  cards:
    - type: custom:mod-card
      card_mod:
        style: |
          :host {
            padding: 28px 28px 0 0;
            align-self: end;
            --vertical-stack-card-margin: 0;
          }
      card:
        type: horizontal-stack
        cards:
          - type: custom:button-card
            template: badge_sonos
            triggers_update:
              - sensor.sonos_group_master_state
            icon: '[[[ if (states[states["sensor.sonos_group_master"].state].state == "playing") return "mdi:pause"; else return "mdi:play" ]]]'
            name: '[[[ if (states[states["sensor.sonos_group_master"].state].state == "playing") return "Pause"; else return "Play" ]]]'
            tap_action:
              action: call-service
              service: media_player.media_play_pause
              service_data:
                entity_id: '[[[ return states["sensor.sonos_group_master"].state ]]]'
          - type: custom:button-card
            template: badge_sonos
            icon: 'mdi:skip-next'
            name: Next
            tap_action:
              action: call-service
              service: media_player.media_next_track
              service_data:
                entity_id: '[[[ return states["sensor.sonos_group_master"].state ]]]'
          - type: custom:button-card
            template: badge_sonos
            entity: sensor.sonos_group_master_shuffle
            triggers_update:
              - sensor.sonos_group_master_shuffle
            icon: '[[[ if (states[states["sensor.sonos_group_master"].state].attributes.shuffle == true) return "mdi:shuffle-variant"; else return "mdi:shuffle-disabled" ]]]'
            name: Shuffle
            tap_action:
              action: call-service
              service: media_player.shuffle_set
              service_data:
                entity_id: '[[[ return states["sensor.sonos_group_master"].state ]]]'
                shuffle: '[[[ if (states[states["sensor.sonos_group_master"].state].attributes.shuffle == true) return false; else return true ]]]'
          - type: custom:button-card
            template: badge_sonos
            entity: sensor.sonos_group_master_repeat
            triggers_update:
              - sensor.sonos_group_master_repeat
            icon: '[[[ if (states[states["sensor.sonos_group_master"].state].attributes.repeat == "all") return "mdi:repeat"; else return "mdi:repeat-off" ]]]'
            name: Repeat
            tap_action:
              action: call-service
              service: media_player.repeat_set
              service_data:
                entity_id: '[[[ return states["sensor.sonos_group_master"].state ]]]'
                repeat: '[[[ if (states[states["sensor.sonos_group_master"].state].attributes.repeat == "all") return "off"; else return "all" ]]]'
    - type: "custom:homekit-card"
      style: |
        :host {
          --vertical-stack-card-margin: 0;
          --tile-background: rgba(135, 135, 135, 0.3);
          --tile-on-background: rgba(255, 255, 255, 0);
          --tile-name-text-color: rgba(255, 255, 255, 0.6);
          --tile-state-text-color: rgba(255, 255, 255, 0.6);
          --tile-icon-color: rgba(255, 255, 255, 0.6);
          --tile-on-icon-color: rgba(0, 0, 0, 0.6);
        }
        .container {
          padding: 5px 0 5px 32px !important;
          font-family: var(--primary-font-family);
        }
        homekit-button.custom-card {
          background-color: inherit !important;
        }
        homekit-button.custom-card button-card {
          margin: -10px;
        }
        homekit-button button-card {
          max-width: inherit !important;
        }
        homekit-button .name {
          font-size: 15px !important;
        }
        homekit-button .state {
          height: 20px;
        }
        .card-title {
          font-size: 24px !important;
          font-weight: 300 !important;
          padding-top: 52px !important;
          padding-bottom: 16px;
        }
        .card-title:first-child {
          padding-top: 4px !important;
        }
        .col:first-child {
          padding-left: 0 !important;
        }
#        .row:nth-child(2) homekit-button {
#          background: none;
#        }
#        .row:nth-child(2) button-card {
#          margin: -10px;
#          width: calc(100% + 20px);
#          height: calc(100% + 20px);
#        }
      enableColumns: true
      rows:
        - row: 1
          columns:
            - column: 1
              entities:
                - title: Media
                  entities:
                    - card: custom:button-card
                      cardOptions:
                        template: media
                      wider: true
                      widerSize: 3
                      higher: true
                      higherSize: 3
                      conditionalClass: '[[[ return "custom-card" ]]]'
            - column: 2
              tileOnRow: 3
              entities:
                - title: Speakers
                  entities:
                    - card: custom:button-card
                      cardOptions:
                        template: speaker
                        entity: input_boolean.sonos_kitchen
                        triggers_update:
                          - sensor.sonos_kitchen_volume
                        variables:
                          volume: 'sensor.sonos_kitchen_volume'
                      conditionalClass: '[[[ return "custom-card" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: speaker
                        entity: input_boolean.sonos_living_room
                        triggers_update:
                          - sensor.sonos_living_room_volume
                        variables:
                          volume: 'sensor.sonos_living_room_volume'
                      conditionalClass: '[[[ return "custom-card" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: speaker
                        entity: input_boolean.sonos_rec_room
                        triggers_update:
                          - sensor.sonos_rec_room_volume
                        variables:
                          volume: 'sensor.sonos_rec_room_volume'
                      conditionalClass: '[[[ return "custom-card" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: speaker
                        entity: input_boolean.sonos_bedroom
                        triggers_update:
                          - sensor.sonos_bedroom_volume
                        variables:
                          volume: 'sensor.sonos_bedroom_volume'
                      conditionalClass: '[[[ return "custom-card" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: speaker
                        entity: input_boolean.sonos_bathroom
                        triggers_update:
                          - sensor.sonos_bathroom_volume
                        variables:
                          volume: 'sensor.sonos_bathroom_volume'
                      conditionalClass: '[[[ return "custom-card" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: speaker
                        entity: input_boolean.sonos_den
                        triggers_update:
                          - sensor.sonos_den_volume
                        variables:
                          volume: 'sensor.sonos_den_volume'
                      conditionalClass: '[[[ return "custom-card" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: speaker
                        entity: input_boolean.sonos_move
                        triggers_update:
                          - sensor.sonos_move_volume
                        variables:
                          volume: 'sensor.sonos_move_volume'
                      conditionalClass: '[[[ return "custom-card" ]]]'
        - row: 2
          columns:
            - column: 1
              tileOnRow: 6
              entities:
                - title: Playlists
                  horizontalScroll: true
                  entities:
                    - card: custom:button-card
                      cardOptions:
                        template: playlist
                        entity: script.sonos_playlist_currently_listening_to
                        name: Currently Listening To
                      wider: true
                      widerSize: 2
                      halfheight: true
                      conditionalClass: '[[[ return "custom-card playlist" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: playlist
                        entity: script.sonos_playlist_country_caffeine
                        name: Country Caffeine
                      wider: true
                      widerSize: 2
                      halfheight: true
                      conditionalClass: '[[[ return "custom-card playlist" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: playlist
                        entity: script.sonos_playlist_country_risers
                        name: Country Risers
                      wider: true
                      widerSize: 2
                      halfheight: true
                      conditionalClass: '[[[ return "custom-card playlist" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: playlist
                        entity: script.sonos_playlist_little_bit_country
                        name: Little Bit Country
                      wider: true
                      widerSize: 2
                      halfheight: true
                      conditionalClass: '[[[ return "custom-card playlist" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: playlist
                        entity: script.sonos_playlist_two_step_music
                        name: Two-Step Music
                      wider: true
                      widerSize: 2
                      halfheight: true
                      conditionalClass: '[[[ return "custom-card playlist" ]]]'
                    - card: custom:button-card
                      cardOptions:
                        template: playlist
                        entity: script.sonos_playlist_west_coast_swing
                        name: West Coast Swing
                      wider: true
                      widerSize: 2
                      halfheight: true
                      conditionalClass: '[[[ return "custom-card playlist" ]]]'
